#  (___________, ____________, _____________) = (0, 1, 10)
#  (________, _________, __________) = (object, xrange, staticmethod)
#  from operator import add as _
#  
#  
#  class __(________):
#  
#      @__________
#      def ___(____):
#          (_____, ______) = (___________, ____________)
#          for _______ in _________(____):
#              (_____, ______) = (______, _(_____, ______))
#          return ______
#      (fib,) = (___,)
#  print __().fib(_____________)
#  (Fibber, add) = (__, _)

(____________________, _____________________, ______________________) = (0, 1, 10)
(_________________, __________________, ___________________) = (object, xrange, staticmethod)
(_, __, ___) = (____________________, _____________________, ______________________)
(____, _____, ______) = (_________________, __________________, ___________________)
from operator import add as _______


class ________(____):

    @______
    def _________(__________):
        (___________, ____________) = (_, __)
        for _____________ in _____(__________):
            (___________, ____________) = (____________, _______(___________, ____________))
        return ____________
    (______________,) = (_________,)
    (___, fib) = (_________, ______________)
print ________().fib(___)
(_______________, ________________) = (________, _______)
(Fibber, _, __, ________, _________, __________, ___________, ____________, _____________, add) = (_______________, _______, ________, ____, _____, ______, _, __, ___, ________________)
#  (___________, ____________, _____________) = (0, 1, 10)
#  (________, _________, __________) = (object, xrange, staticmethod)
#  from operator import add as _
#  
#  
#  class __(________):
#  
#      @__________
#      def ___(____):
#          (_____, ______) = (___________, ____________)
#          for _______ in _________(____):
#              (_____, ______) = (______, _(_____, ______))
#          return ______
#      (fib,) = (___,)
#  print(__.fib(_____________))
#  (Fibber, add) = (__, _)

(_20, _21, _22) = (0, 1, 10)
(_17, _18, _19) = (object, xrange, staticmethod)
(_1, _2, _3) = (_20, _21, _22)
(_4, _5, _6) = (_17, _18, _19)
from operator import add as _7


class _8(_4):

    @_6
    def _9(_10):
        (_11, _12) = (_1, _2)
        for _13 in _5(_10):
            (_11, _12) = (_12, _7(_11, _12))
        return _12
    (_14,) = (_9,)
    (___, fib) = (_9, _14)
print _8.fib(_3)
(_15, _16) = (_8, _7)
(Fibber, _, __, ________, _________, __________, ___________, ____________, _____________, add) = (_15, _7, _8, _4, _5, _6, _1, _2, _3, _16)
